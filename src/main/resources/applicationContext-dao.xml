<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
	http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd"
	default-lazy-init="true">
	<!-- 开发环境配置 -->
	<beans profile="development">
		<!-- 分布式数据源 -->
		<bean id="XADataSource_cen1" class="com.atomikos.jdbc.AtomikosDataSourceBean"
			init-method="init" destroy-method="close">
			<property name="uniqueResourceName" value="XADataSource_cen1" />
			<property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource" />
			<property name="xaProperties">
				<props>					
					<prop key="URL">jdbc:oracle:thin:@192.168.2.125:1521:helowin</prop>
					<prop key="user">uop_cen1</prop>
					<prop key="password">uop_cen1</prop>
				</props>
			</property>
			<property name="maxIdleTime" value="30" />
			<property name="minPoolSize" value="5" />
			<property name="maxPoolSize" value="10" />
			<property name="borrowConnectionTimeout" value="30" />
			<property name="maintenanceInterval" value="60" />
			<property name="testQuery" value="select  1 from dual" />
		</bean>
		<!-- 分布式数据源 -->
		<bean id="XADataSource_crm1" class="com.atomikos.jdbc.AtomikosDataSourceBean"
			init-method="init" destroy-method="close">
			<property name="uniqueResourceName" value="XADataSource_crm1" />
			<property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource" />
			<property name="xaProperties">
				<props>					
					<prop key="URL">jdbc:oracle:thin:@192.168.2.125:1521:helowin</prop>
					<prop key="user">uop_crm1</prop>
					<prop key="password">uop_crm1</prop>
					
				</props>
			</property>
			<property name="maxIdleTime" value="10" />
			<property name="minPoolSize" value="5" />
			<property name="maxPoolSize" value="10" />
			<property name="borrowConnectionTimeout" value="30" />
			<property name="maintenanceInterval" value="60" />
			<property name="testQuery" value="select  1 from dual" />
		</bean>
		<!-- 分布式数据源 -->
		<!-- <bean id="XADataSource_crm2" class="com.atomikos.jdbc.AtomikosDataSourceBean"
			init-method="init" destroy-method="close">
			<property name="uniqueResourceName" value="XADataSource_crm2" />
			<property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource" />
			<property name="xaProperties">
				<props>					
					<prop key="URL">jdbc:oracle:thin:@192.168.2.125:1521:helowin</prop>
					<prop key="user">uop_crm2</prop>
					<prop key="password">B_56BC</prop>
				</props>
			</property>
			<property name="maxIdleTime" value="10" />
			<property name="minPoolSize" value="5" />
			<property name="maxPoolSize" value="10" />
			<property name="borrowConnectionTimeout" value="30" />
			<property name="maintenanceInterval" value="60" />
			<property name="testQuery" value="select  1 from dual" />
		</bean>
		分布式数据源
		<bean id="XADataSource_crm3" class="com.atomikos.jdbc.AtomikosDataSourceBean"
			init-method="init" destroy-method="close">
			<property name="uniqueResourceName" value="XADataSource_crm3" />
			<property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource" />
			<property name="xaProperties">
				<props>
					<prop key="URL">jdbc:oracle:thin:@192.168.2.125:1521:helowin</prop>
					<prop key="user">uop_crm3</prop>
					<prop key="password">C_67CD</prop>
				</props>
			</property>
			<property name="maxIdleTime" value="10" />
			<property name="minPoolSize" value="5" />
			<property name="maxPoolSize" value="10" />
			<property name="borrowConnectionTimeout" value="30" />
			<property name="maintenanceInterval" value="60" />
			<property name="testQuery" value="select  1 from dual" />
		</bean>
		分布式数据源
		<bean id="XADataSource_crm4" class="com.atomikos.jdbc.AtomikosDataSourceBean"
			init-method="init" destroy-method="close">
			<property name="uniqueResourceName" value="XADataSource_crm4" />
			<property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource" />
			<property name="xaProperties">
				<props>					
					<prop key="URL">jdbc:oracle:thin:@192.168.2.125:1521:helowin</prop>
					<prop key="user">uop_crm4</prop>
					<prop key="password">D_78DE</prop>
				</props>
			</property>
			<property name="maxIdleTime" value="10" />
			<property name="minPoolSize" value="5" />
			<property name="maxPoolSize" value="10" />
			<property name="borrowConnectionTimeout" value="30" />
			<property name="maintenanceInterval" value="60" />
			<property name="testQuery" value="select  1 from dual" />
		</bean> -->

		<!-- 分布式数据源 -->
		<bean id="report_ds" class="com.atomikos.jdbc.AtomikosDataSourceBean"
			init-method="init" destroy-method="close">
			<property name="uniqueResourceName" value="report_ds" />
			<property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource" />
			<property name="xaProperties">
				<props>
					<prop key="URL">jdbc:oracle:thin:@192.168.2.125:1521:helowin</prop>
					<prop key="user">uop_cen1</prop>
					<prop key="password">uop_cen1</prop>
				</props>
			</property>
			<property name="maxIdleTime" value="10" />
			<property name="minPoolSize" value="5" />
			<property name="maxPoolSize" value="10" />
			<property name="borrowConnectionTimeout" value="30" />
			<property name="maintenanceInterval" value="60" />
			<property name="testQuery" value="select  1 from dual" />
		</bean>

		<!-- 事务管理 -->
		<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
			init-method="init" destroy-method="close">
			<property name="forceShutdown" value="true" />
		</bean>
		<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
			<property name="transactionTimeout" value="300" />
		</bean>
		<bean id="transactionManager"
			class="org.springframework.transaction.jta.JtaTransactionManager">
			<property name="transactionManager" ref="atomikosTransactionManager" />
			<property name="userTransaction" ref="atomikosUserTransaction" />
			<property name="allowCustomIsolationLevels" value="true" />
		</bean>
	</beans>
	<!-- 不区分开发和生产 -->
	<beans>
		<!-- 数据库默认链接 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="XADataSource_cen1" />
			<property name="configLocation" value="classpath:sql-map-config.xml"></property>
			<property name="mapperLocations" value="classpath:sqlmaps/*SQL.xml"></property>
		</bean>
		<!-- 数据库链接 1 -->
		<bean id="sqlSessionFactory_crm1" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="XADataSource_crm1" />
			<property name="configLocation" value="classpath:sql-map-config.xml"></property>
			<property name="mapperLocations" value="classpath:sqlmaps/*SQL.xml"></property>
		</bean>
		<!--  数据库链接 2 
		<bean id="sqlSessionFactory_crm2" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="XADataSource_crm2" />
			<property name="configLocation" value="classpath:sql-map-config.xml"></property>
			<property name="mapperLocations" value="classpath:sqlmaps/*SQL.xml"></property>
		</bean>
		数据库链接 3
		<bean id="sqlSessionFactory_crm3" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="XADataSource_crm3" />
			<property name="configLocation" value="classpath:sql-map-config.xml"></property>
			<property name="mapperLocations" value="classpath:sqlmaps/*SQL.xml"></property>
		</bean>
		数据库链接 4
		<bean id="sqlSessionFactory_crm4" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="XADataSource_crm4" />
			<property name="configLocation" value="classpath:sql-map-config.xml"></property>
			<property name="mapperLocations" value="classpath:sqlmaps/*SQL.xml"></property>
		</bean> -->

		<bean id="sqlSessionFactory_report" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="report_ds" />
			<property name="configLocation" value="classpath:sql-map-config.xml"></property>
			<property name="mapperLocations" value="classpath:sqlmaps/*SQL.xml"></property>
		</bean>
		<!-- 数据库路由1 -->
		<util:map id="sale" value-type="org.apache.ibatis.session.SqlSessionFactory">
			<entry key="default" value-ref="sqlSessionFactory" />
			<!-- <entry key="0471" value-ref="sqlSessionFactory_crm4" />
			<entry key="0474" value-ref="sqlSessionFactory_crm4" />
			<entry key="0472" value-ref="sqlSessionFactory_crm3" />
			<entry key="0475" value-ref="sqlSessionFactory_crm3" />
			<entry key="0473" value-ref="sqlSessionFactory_crm2" />
			<entry key="0476" value-ref="sqlSessionFactory_crm2" />
			<entry key="0478" value-ref="sqlSessionFactory_crm2" />
			<entry key="0479" value-ref="sqlSessionFactory_crm2" /> -->
			<entry key="0477" value-ref="sqlSessionFactory_crm1" />
			<entry key="0470" value-ref="sqlSessionFactory_crm1" />
			<entry key="0482" value-ref="sqlSessionFactory_crm1" />
			<entry key="0483" value-ref="sqlSessionFactory_crm1" />
			<entry key="NMCU" value-ref="sqlSessionFactory" />
		</util:map>
		<!-- 数据库路由2 -->
		<util:map id="cen1" value-type="org.apache.ibatis.session.SqlSessionFactory">
			<entry key="default" value-ref="sqlSessionFactory" />
		</util:map>
		<util:map id="report" value-type="org.apache.ibatis.session.SqlSessionFactory">
			<entry key="default" value-ref="sqlSessionFactory_report" />
		</util:map>
		<!-- 数据库访问基础组件 -->
		<bean id="dynamicSqlSessionDaoSupport"
			class="com.asiainfo.eframe.dao.impl.DynamicSqlSessionDaoSupportImpl">
			<property name="targetroutes">
				<map value-type="java.util.Map">
					<entry key="sale" value-ref="sale" />
					<entry key="cen1" value-ref="cen1" />
					<entry key="report" value-ref="report" />
				</map>
			</property>
			<property name="defaultTargetroute" ref="cen1" />
			<property name="defaultTargetSqlSessionFactory" ref="sqlSessionFactory" />
			<property name="defaultRouter" ref="userRouting" />
		</bean>

		<!-- 数据库路由1 -->
		<util:map id="ds_sale" value-type="javax.sql.DataSource">
			<entry key="default" value-ref="XADataSource_cen1" />
			<!-- <entry key="0471" value-ref="XADataSource_crm4" />
			<entry key="0474" value-ref="XADataSource_crm4" />
			<entry key="0472" value-ref="XADataSource_crm3" />
			<entry key="0475" value-ref="XADataSource_crm3" />
			<entry key="0473" value-ref="XADataSource_crm2" />
			<entry key="0476" value-ref="XADataSource_crm2" />
			<entry key="0478" value-ref="XADataSource_crm2" />
			<entry key="0479" value-ref="XADataSource_crm2" /> -->
			<entry key="0477" value-ref="XADataSource_crm1" />
			<entry key="0470" value-ref="XADataSource_crm1" />
			<entry key="0482" value-ref="XADataSource_crm1" />
			<entry key="0483" value-ref="XADataSource_crm1" />
			<entry key="NMCU" value-ref="XADataSource_cen1" />
		</util:map>
		<!-- 数据库路由2 -->
		<util:map id="ds_cen1" value-type="javax.sql.DataSource">
			<entry key="default" value-ref="XADataSource_cen1" />
		</util:map>
		<util:map id="ds_report" value-type="javax.sql.DataSource">
			<entry key="default" value-ref="report_ds" />
		</util:map>

		<bean id="dynamicJdbcTemplateSupport"
			class="com.asiainfo.eframe.dao.impl.DynamicJdbcTemplateSupportImpl">
			<property name="targetroutes">
				<map value-type="java.util.Map">
					<entry key="sale" value-ref="ds_sale" />
					<entry key="cen1" value-ref="ds_cen1" />
					<entry key="report" value-ref="ds_report" />
				</map>
			</property>
			<property name="defaultTargetroute" ref="ds_cen1" />
			<property name="defaultTargetDataSource" ref="XADataSource_cen1" />
			<property name="defaultRouter" ref="userRouting" />
		</bean>
		<bean id="baseDao" class="com.asiainfo.eframe.dao.impl.MybatisBaseDao" />
		<!--报表数据集配置开始 -->
		<bean id="datasetConditionDao" class="com.asiainfo.edata.dao.impl.DatasetConditionDaoImpl"
			parent="baseDao" />
		<bean id="fieldMetaDao" class="com.asiainfo.edata.dao.impl.FieldMetaDaoImpl"
			parent="baseDao" />
		<bean id="datasetMetaDao" class="com.asiainfo.edata.dao.impl.EDatasetMetaDaoImpl"
			parent="baseDao" />
		<bean id="uiGridColMetaDao" class="com.asiainfo.ewebframe.dao.impl.UIGridColMetaDaoImpl"
			parent="baseDao" />
		<bean id="uiGridMetaDao" class="com.asiainfo.ewebframe.dao.impl.UIGridMetaDaoImpl"
			parent="baseDao">
			<property name="colDao" ref="uiGridColMetaDao" />
		</bean>
		<!--报表数据集配置结束 -->
		<tx:annotation-driven transaction-manager="transactionManager" />
		<bean id="userRouting" class="com.asiainfo.ewebframe.dao.impl.RoutebyLoginUser" />
	</beans>
	<!-- 生产环境 -->
	<beans profile="production">
		<bean id="XADataSource_cen1" class="org.springframework.jndi.JndiObjectFactoryBean">
			<property name="jndiName">
				<value>ds_crm_uop_cen1xa</value>
			</property>
			<!-- <property name="jndiEnvironment"> <props> <prop key="java.naming.provider.url">t3://127.0.0.1:7001</prop> 
				<prop key="java.naming.factory.initial">weblogic.jndi.WLInitialContextFactory 
				</prop> </props> </property> -->
		</bean>
		<bean id="XADataSource_crm1" class="org.springframework.jndi.JndiObjectFactoryBean">
			<property name="jndiName">
				<value>ds_crm_uop_crm1xa</value>
			</property>
		</bean>
		<bean id="XADataSource_crm2" class="org.springframework.jndi.JndiObjectFactoryBean">
			<property name="jndiName">
				<value>ds_crm_uop_crm2xa</value>
			</property>
		</bean>
		<bean id="XADataSource_crm3" class="org.springframework.jndi.JndiObjectFactoryBean">
			<property name="jndiName">
				<value>ds_crm_uop_crm3xa</value>
			</property>
		</bean>
		<bean id="XADataSource_crm4" class="org.springframework.jndi.JndiObjectFactoryBean">
			<property name="jndiName">
				<value>ds_crm_uop_crm4xa</value>
			</property>
		</bean>
		<bean id="report_ds" class="org.springframework.jndi.JndiObjectFactoryBean">
			<property name="jndiName">
				<value>ds_crm_ucr_report</value>
			</property>
		</bean>
		<!-- 事务管理 -->
		<bean id="transactionManager"
			class="org.springframework.transaction.jta.WebLogicJtaTransactionManager">
			<property name="transactionManagerName" value="javax.transaction.TransactionManager" />
		</bean>
	</beans>
</beans>
